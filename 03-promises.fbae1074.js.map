{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA7BAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBACF,MACEC,UAAUb,MAAEA,EAAKc,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cAEN,IAAIC,EAAeC,OAAOlB,EAAMmB,OAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOH,EAAOI,OAAQC,GAAK,EAC9CtB,EAAcsB,EAAGH,GACdI,MAAKF,GAASvB,EAAA0B,OAAOC,QAAQJ,KAC7BK,OAAMC,GAAS7B,EAAA0B,OAAOI,QAAQD,KACjCR,GAAgBC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    createPromise(i, currentDelay)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error));\n    currentDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","currentTarget","currentDelay","Number","value","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.fbae1074.js.map"}