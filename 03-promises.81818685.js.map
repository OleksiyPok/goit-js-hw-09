{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA7BMS,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAOF,IANA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYhB,EAAKc,EAALd,MAAOiB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,EAAeC,OAAOpB,EAAMqB,OAEvBC,EAAI,EAAGA,GAAKF,OAAOF,EAAOG,OAAQC,GAAK,EAC9CxB,EAAcwB,EAAGH,GACdI,MAAK,SAAAF,G,OAASzB,EAAA4B,OAAOC,QAAQJ,E,IAC7BK,OAAM,SAAAC,G,OAAS/B,EAAA4B,OAAOI,QAAQD,E,IACjCR,GAAgBC,OAAOH,EAAKI,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    createPromise(i, currentDelay)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error));\n    currentDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","currentDelay","Number","value","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.81818685.js.map"}